/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include "keymap_abnt2.h"

// Layers
#define L_DFT 0
#define L_NMB 1
#define L_SYM 2
#define L_FUN 3

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// ---------------------------------------------------------------------------------
// | TAB   |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
// | ESC   |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | LSHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//  | LCTRL | (LGUI) TAB | (L_LWR) SPACE |   | (L_RSE) RET | (LSHFT) BSPC  | LALT |
                        bindings = <
   &kp TAB   &kp BR_Q &kp BR_W &kp BR_E &kp BR_R &kp BR_T       &kp BR_Y &kp BR_U  &kp BR_I     &kp BR_O   &kp BR_P     &kp BR_ACUTE
   &kp ESC   &kp BR_A &kp BR_S &kp BR_D &kp BR_F &kp BR_G       &kp BR_H &kp BR_J  &kp BR_K     &kp BR_L   &kp BR_CEDIL &kp BR_TILDE
   &kp LSHFT &kp BR_Z &kp BR_X &kp BR_C &kp BR_V &kp BR_B       &kp BR_N &kp BR_M  &kp BR_COMMA &kp BR_DOT &kp BR_SEMI  &mt LALT BR_FSLH
                   &kp LCTRL &mt LGUI TAB &lt L_SYM SPACE       &lt L_NMB RET &mt LSHFT BSPC &mo L_FUN
                        >;
                };
                number_layer {
// -----------------------------------------------------------------------------------
// |   |  1  |  2  |  3  |  4  |  5  |   | HOME | PG_DN | PG_UP | END   |     |      |
// |   |  6  |  7  |  8  |  9  |  0  |   | LEFT | DOWN  | UP    | RIGHT |     |      |
// |   |  (  |  -  |  +  |  )  |  .  |   |      | INS   | DEL   |       |     |      |
//                 |     |     |     |   |      |       |       |
                        bindings = <
   &trans &kp BR_1    &kp BR_2     &kp BR_3     &kp BR_4    &kp BR_5         &kp HOME &kp PG_DN &kp PG_UP &kp END   &trans &trans
   &trans &kp BR_6    &kp BR_7     &kp BR_8     &kp BR_9    &kp BR_0         &kp LEFT &kp DOWN  &kp UP    &kp RIGHT &trans &trans
   &trans &kp BR_LPAR &kp BR_PLUS  &kp BR_MINUS &kp BR_RPAR &kp BR_DOT       &trans   &kp INS   &kp DEL   &trans    &trans &trans
                                   &trans       &trans      &trans           &trans   &trans    &trans
                        >;
                };

                symbol_layer {
// ---------------------------------------------------------------------------
// |   |     |  "  |  !  |  $  |  %  |   |  @  |  &  |  *  |  '  |     |     |
// |   |  {  |  (  |  )  |  }  |  =  |   |  \  |  +  |  -  |  /  |     |     |
// |   |     |  [  |  ]  |  _  |  #  |   |  |  |     |     |     |     |     |
//                 |     |     |     |   |     |     |     |
                        bindings = <
   &trans &trans      &kp BR_DQT  &kp BR_EXCL &kp BR_DLLR  &kp BR_PRCNT       &kp BR_AT   &kp BR_AMPS &kp BR_STAR  &kp BR_SQT  &trans &trans
   &trans &kp BR_LBRC &kp BR_LPAR &kp BR_RPAR &kp BR_RBRC  &kp BR_EQUAL       &kp BR_BSLH &kp BR_PLUS &kp BR_MINUS &kp BR_FSLH &trans &trans
   &trans &trans      &kp BR_LBKT &kp BR_RBKT &kp BR_UNDER &kp BR_HASH        &kp BR_PIPE &trans      &trans       &trans      &trans &trans
                                  &trans      &trans       &trans             &trans      &trans      &trans
                        >;
                };

                function_layer {
// -----------------------------------------------------------------------------------------------------
// |   |  F1  |  F2  |  F3  | F4   | F5   |   | BT(0) | BT(1)  | BT(2)    | BT(3)    | BT(4) | BT(CLR) |
// |   |  F6  |  F7  |  F8  | F9   | F10  |   |       | PREV   | PP       | NEXT     |       |         |
// |   |      |      |      | F11  | F12  |   |       | VOL-UP | VOL-MUTE | VOL-DOWN |       |         |
//                   |      |      |      |   |       |        |          |
                        bindings = <
   &trans &kp F1 &kp F2 &kp F3 &kp F4  &kp F5        &bt BT_SEL 0 &bt BT_SEL 1   &bt BT_SEL 2 &bt BT_SEL 3  &bt BT_SEL 4 &bt BT_CLR
   &trans &kp F6 &kp F7 &kp F8 &kp F9  &kp F10       &trans       &kp C_PREV     &kp C_PP     &kp C_NEXT    &trans       &trans
   &trans &trans &trans &trans &kp F11 &kp F12       &trans       &kp C_VOL_DN   &kp C_MUTE   &kp C_VOL_UP  &trans       &trans
                        &trans  &trans  &trans       &trans       &trans         &trans
                        >;
                };
        };
};
